{
    "title": "EmailContactmomentToMedewerkerAction",
    "$id": "https://kissdevelopment.commonground.nu/action/kiss.EmailContactmomentAction.action.json",
    "$schema": "https://docs.commongateway.nl/schemas/Action.schema.json",
    "version": "0.0.3",
    "listens": ["commongateway.object.create"],
    "conditions":
    {
        "and": [
            {
                "==": [
                    {
                        "var": "entity"
                    },
                    "https://commongateway.nl/klant.betrokkeneBijKlantcontact.schema.json"
                ]
            },
            {
                "!=": [
                    {
                        "var": "response.embedded.contactmoment.embedded.todo.attendees.0"
                    },
                    null
                ]
            }
        ]
    },
    "class": "CommonGateway\\CustomerNotificationsBundle\\ActionHandler\\EmailHandler",
    "configuration": {
        "serviceDNS": "",
        "template": "",
        "variables": {
            "klantVoornaam": "response.embedded.klant.voornaam",
            "klantTussenvoegsel": "response.embedded.klant.voorvoegselAchternaam",
            "klantAchternaam": "response.embedded.klant.achternaam",
            "specificatie": "response.embedded.contactmoment.afwijkendOnderwerp",
            "notitie": "response.embedded.contactmoment.embedded.todo.description",
            "medewerker": "response.embedded.contactmoment.embedded.todo.attendees.0"
        },
        "sender": "kiss@commonground.nu",
        "receiver": "{{ medewerker }}",
        "subject": "KISS Contactverzoek {{ \"now\"|date(\"d/m/Y H:i\", \"Europe/Amsterdam\") }}"
    }
}