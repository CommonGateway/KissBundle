{
    "title": "EmailContactmomentToAfdelingAction",
    "$id": "https://kissdevelopment.commonground.nu/action/kiss.EmailContactmomentToAfdelingAction.action.json",
    "$schema": "https://docs.commongateway.nl/schemas/Action.schema.json",
    "version": "0.0.1",
    "listens": ["commongateway.object.create"],
    "conditions":
    {
        "and": [
            {
                "==": [
                    {
                        "var": "entity"
                    },
                    "https://commongateway.nl/klant.betrokkeneBijKlantcontact.schema.json"
                ]
            },
            {
                "!=": [
                    {
                        "var": "response.embedded.klantcontact.embedded.actors.0.embedded.organisatorischeEenheid.eMailadres"
                    },
                    null
                ]
            },
            {
                "!=": [
                    {
                        "var": "response.embedded.klantcontact.embedded.actors.1.embedded.medewerker.eMailadres"
                    },
                    null
                ]
            }
        ]
    },
    "class": "CommonGateway\\CustomerNotificationsBundle\\ActionHandler\\EmailHandler",
    "configuration": {
        "serviceDNS": "",
        "template": "",
        "variables": {
            "klantVoornaam": "response.embedded.partij.embedded.persoon.voornaam",
            "klantTussenvoegsel": "response.embedded.partij.embedded.persoon.voorvoegselAchternaam",
            "klantAchternaam": "response.embedded.partij.embedded.persoon.achternaam",
            "specificatie": "response.embedded.klantcontact.onderwerp",
            "notitie": "response.embedded.klantcontact.todo",
            "afdeling": "response.embedded.klantcontact.embedded.actors.0.embedded.organisatorischeEenheid.eMailadres",
            "medewerker": "response.embedded.klantcontact.embedded.actors.1.embedded.medewerker.eMailadres"
        },
        "sender": "kiss@commonground.nu",
        "receiver": "{{ afdeling }}",
        "subject": "KISS Contactverzoek {{ \"now\"|date(\"d/m/Y H:i\", \"Europe/Amsterdam\") }}"
    }
}